{"openapi":"3.0.2","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/user":{"post":{"tags":["user"],"summary":"Create a user","description":"Creates new user\n\nCalls src.db_user.create_user function\n\nArgs:\n- request (UserBase): username, email and password required, avatar_url is optional\n- db (Session): database session\n\nReturns:\n- json with username and email","operationId":"create_user_user_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDisplay"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/user/avatar/{id}":{"post":{"tags":["user"],"summary":"Update user avatar","description":"Updates user avatar\n\nCalls src.db_user.create_user function\n\nArgs:\n- avatar_url: url of uploaded image by src.post.upload_file function\n- db (Session): database session\n- current_user (UserAuth): info about current user from database\n\nReturns:\n- 'ok'","operationId":"update_avatar_user_avatar__id__post","parameters":[{"required":true,"schema":{"title":"Avatar Url","type":"string"},"name":"avatar_url","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Update Avatar User Avatar  Id  Post","type":"string"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/post":{"post":{"tags":["post"],"summary":"Create Post","description":"Creates new post\n\nCall src.db_post.create_post function\n\nArgs:\n- request (PostBase): json with image_url, caption and creator_id\n- db (Session): database session\n\nReturns:\n- DbPost: id, image_url, caption, timestamp, username and\nlist of comments","operationId":"create_post_post_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostDisplay"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/post/all":{"get":{"tags":["post"],"summary":"Retrive all posts","description":"Retrives all posts\n\nCalls src.db_post.get_all_posts function\n\nArgs:\n- db (Session): database session\n\nReturns:\n- List of posts in PostDisplay format","operationId":"posts_post_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Posts Post All Get","type":"array","items":{"$ref":"#/components/schemas/PostDisplay"}}}}}}}},"/post/image":{"post":{"tags":["post"],"summary":"Upload an image","description":"Uploades an image\n\nThis app performs uploading file for future posts.\nAuthentication is required.\nRandom string of 6 characters is added to filename to prevent overwriting.\n\nArgs:\n- image (UploadFile): image from filesystem\n- current_user: result of user validation by get_current_user function\n\nReturns:\n- {\"filename\": path} with path to uploaded file","operationId":"upload_file_post_image_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_file_post_image_post"}}},"required":true},"responses":{"200":{"description":"Path to uploaded file","content":{"application/json":{"schema":{"title":"Response Upload File Post Image Post","type":"object"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/post/delete/{id}":{"get":{"tags":["post"],"summary":"Delete post","description":"Delete post\n\nCall src.db_post.delete function\n\nArgs:\n- id (int): post id\n- db (Session): database session\n- current_user (UserAuth): result of user validation\nby get_current_user function\n\nReturns:\n- 'ok' if post was deleted","operationId":"delete_post_delete__id__get","parameters":[{"required":true,"schema":{"title":"Id","type":"integer"},"name":"id","in":"path"}],"responses":{"200":{"description":"\"ok\" or HTTP exception","content":{"application/json":{"schema":{"title":"Response Delete Post Delete  Id  Get","type":"string"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/login":{"post":{"tags":["authentication"],"summary":"Login","description":"Endpoint for login\n\nValidates credentians and returns\naccess_token, token_type, user_id and username if credentials are valid.\n\nArgs:\n- request (OAuth2PasswordRequestForm): authormatic form request\n- db (Session): database session\n\nRaises:\n- HTTPException(\"Invalid credentials\"): if no user with this username in database\n- HTTPException(\"Incorrect password\"): if passowrd is wrong\n\nReturns:\n- Dictionary with access_token, token_type, user_id and username","operationId":"login_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Login Login Post","type":"object"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/comment/all/{post_id}":{"get":{"tags":["comment"],"summary":"Retrive all comments for the post","description":"Retrives all comments for the post\n\nArgs:\n- post_id (int): post id\n- db (Session): database session\n\nReturns:\n- List of comments (DbComment)","operationId":"comments_comment_all__post_id__get","parameters":[{"required":true,"schema":{"title":"Post Id","type":"integer"},"name":"post_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/comment":{"post":{"tags":["comment"],"summary":"Create a comment","description":"Enpoint for new comment creation\n\nArgs:\n- request (CommentBase): username, text and post_id\n- db (Session, optional): database session\n- current_user (UserAuth): current DbUser\n\nReturns:\n- DbComment: id, text, username, timestamp, post_id","operationId":"create_comment_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/":{"get":{"summary":"Root","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_login_login_post":{"title":"Body_login_login_post","required":["username","password"],"type":"object","properties":{"grant_type":{"title":"Grant Type","pattern":"password","type":"string"},"username":{"title":"Username","type":"string"},"password":{"title":"Password","type":"string"},"scope":{"title":"Scope","type":"string","default":""},"client_id":{"title":"Client Id","type":"string"},"client_secret":{"title":"Client Secret","type":"string"}}},"Body_upload_file_post_image_post":{"title":"Body_upload_file_post_image_post","required":["image"],"type":"object","properties":{"image":{"title":"Image","type":"string","format":"binary"}}},"Comment":{"title":"Comment","required":["text","username","timestamp"],"type":"object","properties":{"text":{"title":"Text","type":"string"},"username":{"title":"Username","type":"string"},"timestamp":{"title":"Timestamp","type":"string","format":"date-time"}}},"CommentBase":{"title":"CommentBase","required":["username","text","post_id"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"text":{"title":"Text","type":"string"},"post_id":{"title":"Post Id","type":"integer"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"PostBase":{"title":"PostBase","required":["image_url","caption","creator_id"],"type":"object","properties":{"image_url":{"title":"Image Url","type":"string"},"caption":{"title":"Caption","type":"string"},"creator_id":{"title":"Creator Id","type":"integer"}}},"PostDisplay":{"title":"PostDisplay","required":["id","image_url","caption","timestamp","user","comments"],"type":"object","properties":{"id":{"title":"Id","type":"integer"},"image_url":{"title":"Image Url","type":"string"},"caption":{"title":"Caption","type":"string"},"timestamp":{"title":"Timestamp","type":"string","format":"date-time"},"user":{"$ref":"#/components/schemas/User"},"comments":{"title":"Comments","type":"array","items":{"$ref":"#/components/schemas/Comment"}}}},"User":{"title":"User","required":["username"],"type":"object","properties":{"username":{"title":"Username","type":"string"}}},"UserBase":{"title":"UserBase","required":["username","email","password"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"email":{"title":"Email","type":"string"},"password":{"title":"Password","type":"string"},"avatar_url":{"title":"Avatar Url","type":"string"}}},"UserDisplay":{"title":"UserDisplay","required":["username","email"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"email":{"title":"Email","type":"string"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}}}}}