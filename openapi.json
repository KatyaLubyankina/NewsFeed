{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/user":{"post":{"tags":["user"],"summary":"Create a user","description":"Creates new user\n\nCalls src.db_user.create_user function\n\nArgs:\n- request (UserBase): username, email and password required, avatar_url is optional\n- db (Session): database session\n\nReturns:\n- json with username and email","operationId":"create_user_user_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDisplay"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/post":{"post":{"tags":["post"],"summary":"Create Post","description":"Creates new post\n\nCall src.db_post.create_post function\n\nArgs:\n- request (PostBase): json with image_url, caption and creator_id\n- db (Session): database session\n\nReturns:\n- DbPost: id, image_url, caption, timestamp, username and\nlist of comments","operationId":"create_post_post_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostDisplay"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/post/all":{"get":{"tags":["post"],"summary":"Returns all posts","description":"Returns all posts\n\nCalls src.db_post.get_all_posts function\n\nArgs:\n- db (Session): database session\n\nReturns:\n- List of posts in PostDisplay format","operationId":"posts_post_all_get","parameters":[{"required":false,"schema":{"type":"integer","minimum":1.0,"title":"Page","default":1},"name":"page","in":"query"},{"required":false,"schema":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"Size","default":50},"name":"size","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page_PostDisplay_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/post/image":{"post":{"tags":["post"],"summary":"Upload an image","description":"Uploads an image\n\nThis app performs uploading image for future posts in minIO S3 storage.\nAuthentication is required.\nRandom string of 6 characters is added to filename to prevent overwriting.\n\nArgs:\n- image (UploadFile): image from filesystem\n- current_user: result of user validation by get_current_user function\n\nReturns:\n- {\"Bucket name\": \"images\", \"filename\": filename} with modified filename","operationId":"upload_file_post_image_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_file_post_image_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Upload File Post Image Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/post/delete/{id}":{"get":{"tags":["post"],"summary":"Delete post","description":"Delete post\n\nCall src.db_post.delete function\n\nArgs:\n- id (int): post id\n- db (Session): database session\n- current_user (UserAuth): result of user validation\nby get_current_user function\n\nReturns:\n- 'ok' if post was deleted","operationId":"delete_post_delete__id__get","parameters":[{"required":true,"schema":{"type":"integer","title":"Id"},"name":"id","in":"path"}],"responses":{"200":{"description":"\"ok\" or HTTP exception","content":{"application/json":{"schema":{"type":"string","title":"Response Delete Post Delete  Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/login":{"post":{"tags":["authentication"],"summary":"Login","description":"Endpoint for login\n\nValidates credentials and returns\naccess_token, token_type, user_id and username if credentials are valid.\n\nArgs:\n- request (OAuth2PasswordRequestForm): automatic form request\n- db (Session): database session\n\nRaises:\n- HTTPException(\"Invalid credentials\"): if no user with this username in database\n- HTTPException(\"Incorrect password\"): if password is wrong\n\nReturns:\n- Dictionary with access_token, token_type, user_id and username","operationId":"login_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_login_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","title":"Response Login Login Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/comment/all/{post_id}":{"get":{"tags":["comment"],"summary":"Retrieve all comments for the post","description":"Retrieves all comments for the post\n\nArgs:\n- post_id (int): post id\n- db (Session): database session\n\nReturns:\n- List of comments (DbComment)","operationId":"comments_comment_all__post_id__get","parameters":[{"required":true,"schema":{"type":"integer","title":"Post Id"},"name":"post_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/comment":{"post":{"tags":["comment"],"summary":"Create a comment","description":"Endpoint for new comment creation\n\nArgs:\n- request (CommentBase): username, text and post_id\n- db (Session, optional): database session\n- current_user (UserAuth): current DbUser\n\nReturns:\n- DbComment: id, text, username, timestamp, post_id","operationId":"create_comment_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentBase"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/":{"get":{"summary":"Root","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_login_login_post":{"properties":{"grant_type":{"type":"string","pattern":"password","title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"type":"string","title":"Client Id"},"client_secret":{"type":"string","title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_login_login_post"},"Body_upload_file_post_image_post":{"properties":{"image":{"type":"string","format":"binary","title":"Image"}},"type":"object","required":["image"],"title":"Body_upload_file_post_image_post"},"Comment":{"properties":{"text":{"type":"string","title":"Text"},"username":{"type":"string","title":"Username"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"}},"type":"object","required":["text","username","timestamp"],"title":"Comment"},"CommentBase":{"properties":{"username":{"type":"string","title":"Username"},"text":{"type":"string","title":"Text"},"post_id":{"type":"integer","title":"Post Id"}},"type":"object","required":["username","text","post_id"],"title":"CommentBase"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Page_PostDisplay_":{"properties":{"items":{"items":{"$ref":"#/components/schemas/PostDisplay"},"type":"array","title":"Items"},"total":{"type":"integer","minimum":0.0,"title":"Total"},"page":{"type":"integer","minimum":1.0,"title":"Page"},"size":{"type":"integer","minimum":1.0,"title":"Size"},"pages":{"type":"integer","minimum":0.0,"title":"Pages"}},"type":"object","required":["items","total"],"title":"Page[PostDisplay]"},"PostBase":{"properties":{"image_url":{"type":"string","title":"Image Url"},"caption":{"type":"string","title":"Caption"},"creator_id":{"type":"integer","title":"Creator Id"}},"type":"object","required":["image_url","caption","creator_id"],"title":"PostBase"},"PostDisplay":{"properties":{"id":{"type":"integer","title":"Id"},"image_url":{"type":"string","title":"Image Url"},"caption":{"type":"string","title":"Caption"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"},"user":{"$ref":"#/components/schemas/User"},"comments":{"items":{"$ref":"#/components/schemas/Comment"},"type":"array","title":"Comments"}},"type":"object","required":["id","image_url","caption","timestamp","user","comments"],"title":"PostDisplay"},"User":{"properties":{"username":{"type":"string","title":"Username"}},"type":"object","required":["username"],"title":"User"},"UserBase":{"properties":{"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","email","password"],"title":"UserBase"},"UserDisplay":{"properties":{"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"}},"type":"object","required":["username","email"],"title":"UserDisplay"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"login"}}}}}}
